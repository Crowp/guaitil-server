{"version":3,"sources":["template/helpers/handleNavbarTransparency.js","template/components/navbar/LandingRightSideNavItem.js","template/components/navbar/NavbarStandard.js","template/components/common/Loader.js","template/components/e-commerce/product/ProductFooter.js","template/hooks/usePagination.js","template/components/e-commerce/lodgin/ProductGrid.js","template/components/e-commerce/lodgin/Local.js","views/pages/clients/kitchens/index.js"],"names":["windowHeight","window","innerHeight","alpha","scrollY","document","getElementsByClassName","style","backgroundColor","LandingRightSideNavItem","Nav","navbar","className","NavItem","NavLink","color","letterSpacing","tag","Link","to","NavbarStandard","hasColor","useState","navbarCollapsed","setNavbarCollapsed","useEffect","addEventListener","handleNavbarTransparency","removeEventListener","Navbar","dark","fixed","expand","topNavbarBreakpoint","classNames","Container","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","NavbarTopDropDownMenus","Loader","props","xs","defaultProps","type","size","ProductFooter","meta","handler","isRTL","useContext","AppContext","total","pageNo","itemsPerPage","nextPageNo","prevPageNo","nextPage","prevPage","currentPage","Flex","justify","align","disabled","icon","getPaginationArray","map","page","key","usePagination","items","defaultItemsPerPage","data","setData","itemsChunk","setItemsChunk","setTotal","lastPageNo","setLastPageNo","setItemsPerPage","setPageNo","from","setFrom","setTo","setPrevPageNo","setNextPageNo","isIterableArray","chunk","length","handleNextPage","handlePrevPage","perPage","ProductGrid","id","name","description","multimedia","sliderSettings","console","log","Col","column","maxWidth","maxHeight","objectFit","src","url","alt","fileName","item","Badge","pill","href","infinite","speed","slidesToShow","slidesToScroll","Product","md","lg","Products","match","location","dispatch","useDispatch","locals","useSelector","state","localsByType","filter","local","localType","kitchenAction","getLocals","localIds","setLocalIds","loading","useFakeFetch","paginationData","paginationMeta","paginationHandler","productLayout","params","isList","isGrid","noGutters","includes","index"],"mappings":"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","file":"static/js/12.e38f9f64.chunk.js","sourcesContent":["const windowHeight = window.innerHeight;\n\nexport default () => {\n  const scrollTop = window.scrollY;\n  let alpha = (scrollTop / windowHeight) * 2;\n  alpha >= 1 && (alpha = 1);\n  document.getElementsByClassName('navbar-theme')[0].style.backgroundColor = `rgba(166, 40, 28, ${alpha})`;\n};\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nconst breakpoint = 'lg';\n\nconst LandingRightSideNavItem = () => {\n  return (\n    <Nav navbar className=\"ml-auto\">\n      <NavItem>\n        <NavLink style={{ color: 'white', letterSpacing: '.5px' }} tag={Link} to=\"/authentication/login\">\n          Login\n        </NavLink>\n      </NavItem>\n    </Nav>\n  );\n};\n\nexport default LandingRightSideNavItem;\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Container, Nav, Navbar, NavbarBrand, NavbarToggler } from 'reactstrap';\nimport handleNavbarTransparency from '../../helpers/handleNavbarTransparency';\nimport NavbarTopDropDownMenus from './NavbarTopDropDownMenus';\nimport LandingRightSideNavItem from './LandingRightSideNavItem';\nimport { topNavbarBreakpoint } from '../../config';\nimport '../../../template/assets/styles-css/style-landing/landing.css';\n\nconst NavbarStandard = ({ hasColor }) => {\n  const [navbarCollapsed, setNavbarCollapsed] = useState(true);\n\n  useEffect(() => {\n    if (!hasColor) {\n      window.addEventListener('scroll', handleNavbarTransparency);\n    }\n    return () => window.removeEventListener('scroll', handleNavbarTransparency);\n  }, []);\n\n  return (\n    <Navbar\n      dark\n      fixed=\"top\"\n      style={hasColor && { backgroundColor: 'rgba(166, 40, 28, 1)' }}\n      expand={topNavbarBreakpoint}\n      className={classNames('navbar-standard navbar-theme', {\n        'landing-color': !navbarCollapsed\n      })}\n    >\n      <Container>\n        <NavbarBrand className=\"text-white landing-text\" tag={Link} to=\"/\">\n          Guaitil\n        </NavbarBrand>\n        <NavbarToggler onClick={() => setNavbarCollapsed(!navbarCollapsed)} />\n        <Collapse isOpen={!navbarCollapsed} navbar className=\"scrollbar \">\n          <Nav navbar>\n            <NavbarTopDropDownMenus setNavbarCollapsed={setNavbarCollapsed} />\n          </Nav>\n          <LandingRightSideNavItem />\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavbarStandard;\n","import React from 'react';\nimport { Col, Row, Spinner } from 'reactstrap';\n\nconst Loader = props => (\n  <Row className=\"flex-center py-5\">\n    <Col xs=\"auto\">\n      <Spinner {...props} />\n    </Col>\n  </Row>\n);\n\nLoader.propTypes = { ...Spinner.propTypes };\n\nLoader.defaultProps = {\n  type: 'grow',\n  size: 'lg',\n  color: 'primary'\n};\n\nexport default Loader;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '../../../context/Context';\nimport { Button, CardFooter } from 'reactstrap';\nimport Flex from '../../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getPaginationArray } from '../../../helpers/utils';\n\nconst ProductFooter = ({ meta, handler }) => {\n  const { isRTL } = useContext(AppContext);\n  const { total, pageNo, itemsPerPage, nextPageNo, prevPageNo } = meta;\n  const { nextPage, prevPage, currentPage } = handler;\n\n  return (\n    <CardFooter tag={Flex} justify=\"center\" align=\"center\" className=\"bg-light border-top\">\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={prevPage} disabled={!prevPageNo}>\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'right' : 'left'}`} />\n      </Button>\n      {getPaginationArray(total, itemsPerPage).map(page => (\n        <Button\n          color={pageNo === page ? 'falcon-primary' : 'falcon-default'}\n          size=\"sm\"\n          className=\"ml-2\"\n          onClick={() => currentPage(page)}\n          key={page}\n        >\n          {page}\n        </Button>\n      ))}\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={nextPage} disabled={!nextPageNo}>\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'left' : 'right'}`} />\n      </Button>\n    </CardFooter>\n  );\n};\n\nProductFooter.propTypes = {\n  meta: PropTypes.object.isRequired,\n  handler: PropTypes.object.isRequired\n};\n\nexport default ProductFooter;\n","import { useState, useEffect } from 'react';\nimport chunk from 'lodash/chunk';\nimport { isIterableArray } from '../helpers/utils';\n\nconst usePagination = (items, defaultItemsPerPage = 5) => {\n  const [data, setData] = useState([]);\n  const [itemsChunk, setItemsChunk] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [lastPageNo, setLastPageNo] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\n  const [pageNo, setPageNo] = useState(null);\n  const [from, setFrom] = useState(1);\n  const [to, setTo] = useState(itemsPerPage);\n  const [prevPageNo, setPrevPageNo] = useState(true);\n  const [nextPageNo, setNextPageNo] = useState(true);\n\n  useEffect(() => {\n    setData(isIterableArray(itemsChunk[pageNo - 1]) ? itemsChunk[pageNo - 1] : []);\n  }, [setData, itemsPerPage, itemsChunk, pageNo]);\n\n  useEffect(() => {\n    setItemsChunk(chunk(items, itemsPerPage));\n    setPageNo(1);\n    setTotal(items.length);\n  }, [itemsPerPage, setPageNo, items]);\n\n  useEffect(() => {\n    setFrom(itemsPerPage * (pageNo - 1) + 1);\n    setTo(itemsPerPage * (pageNo - 1) + data.length);\n    setPrevPageNo(pageNo > 1 ? pageNo - 1 : null);\n    setNextPageNo(pageNo < lastPageNo ? pageNo + 1 : null);\n  }, [itemsPerPage, pageNo, data, lastPageNo]);\n\n  useEffect(() => {\n    setLastPageNo(itemsChunk.length);\n  }, [itemsChunk]);\n\n  const handleNextPage = () => setPageNo(pageNo + 1);\n  const handlePrevPage = () => setPageNo(pageNo - 1);\n\n  return {\n    data,\n    meta: { total, pageNo, lastPageNo, itemsPerPage, from, to, nextPageNo, prevPageNo },\n    handler: {\n      nextPage: handleNextPage,\n      prevPage: handlePrevPage,\n      currentPage: setPageNo,\n      perPage: setItemsPerPage\n    }\n  };\n};\n\nexport default usePagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Col } from 'reactstrap';\nimport Flex from '../../common/Flex';\nimport { Link } from 'react-router-dom';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Slider from 'react-slick/lib';\n\nconst ProductGrid = ({ id, name, description, multimedia, sliderSettings }) => {\n  console.log(multimedia);\n  return (\n    <Col className=\"mb-4\">\n      <Flex\n        justify=\"between\"\n        column\n        className=\"border rounded h-100 pb-3\"\n        style={{\n          maxWidth: 500,\n          maxHeight: 500\n        }}\n      >\n        <div className=\"overflow-hidden\">\n          <div className=\"position-relative rounded-top overflow-hidden\">\n            {isIterableArray(multimedia) && multimedia.length === 1 && (\n              <Link className=\"d-block h-100\" to={`/e-commerce/product-details/${id}`}>\n                <img\n                  style={{ objectFit: 'cover' }}\n                  //Loading=\"lazy\"\n                  className=\"img-fluid rounded-top\"\n                  src={multimedia[0].url}\n                  alt={multimedia[0].fileName}\n                />\n              </Link>\n            )}\n            {isIterableArray(multimedia) && multimedia.length > 1 && (\n              <Slider {...sliderSettings}>\n                {multimedia.map(item => (\n                  <Link className=\"d-block h-100\" to={`/e-commerce/product-details/${id}`} key={item.id}>\n                    <img\n                      className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded\"\n                      src={item[0].url}\n                      alt={item[0].fileName}\n                    />\n                  </Link>\n                ))}\n              </Slider>\n            )}\n            <Badge color=\"success\" pill className=\"position-absolute t-0 r-0 mr-2 mt-2 fs--2 z-index-2\">\n              New\n            </Badge>\n          </div>\n          <div className=\"p-3\">\n            <h5 className=\"fs-0\">\n              <Link className=\"text-dark\" to={`/e-commerce/product-details/${id}`}>\n                {name}\n              </Link>\n            </h5>\n            <p className=\"fs--1 mb-3\">\n              <a className=\"text-500\" href=\"#!\">\n                {description}\n              </a>\n            </p>\n          </div>\n        </div>\n      </Flex>\n    </Col>\n  );\n};\n\nProductGrid.propTypes = {\n  sliderSettings: PropTypes.object.isRequired,\n  multimedia: PropTypes.array\n};\n\nProductGrid.defaultProps = { multimedia: [] };\n\nexport default ProductGrid;\n","import React, { useContext } from 'react';\nimport ProductGrid from './ProductGrid';\n\nconst sliderSettings = {\n  infinite: true,\n  speed: 500,\n  slidesToShow: 1,\n  slidesToScroll: 1\n};\n\nconst Product = props => {\n  console.log(props);\n  return <ProductGrid {...props} sliderSettings={sliderSettings} md={6} lg={4} />;\n};\n\nexport default Product;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Card, CardBody, Row } from 'reactstrap';\nimport Loader from '../../../../template/components/common/Loader';\nimport useFakeFetch from '../../../../template/hooks/useFakeFetch';\nimport { isIterableArray } from '../../../../template/helpers/utils';\nimport NavbarStandard from '../../../../template/components/navbar/NavbarStandard';\nimport Local from '../../../../template/components/e-commerce/lodgin/Local';\nimport classNames from 'classnames';\nimport ProductFooter from '../../../../template/components/e-commerce/product/ProductFooter';\nimport usePagination from '../../../../template/hooks/usePagination';\nimport Section from '../../../../template/components/common/Section';\nimport { useDispatch, useSelector } from 'react-redux';\nimport kitchenAction from '../../../../stores/local/LocalAction';\n\nconst Products = ({ match, location }) => {\n  const dispatch = useDispatch();\n  // Context\n  const locals = useSelector(state => state.locals);\n\n  const localsByType = locals.filter(local => local.localType === 'KITCHEN');\n\n  useEffect(() => {\n    dispatch(kitchenAction.getLocals());\n  }, [dispatch]);\n  // State\n  const [localIds, setLocalIds] = useState([]);\n\n  // Hook\n  const { loading } = useFakeFetch(locals);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(localIds, 4);\n\n  const { productLayout } = match.params;\n  const isList = productLayout === 'list';\n  const isGrid = productLayout === 'grid';\n\n  useEffect(() => {\n    setLocalIds(localsByType.map(local => local.id));\n  }, [locals, setLocalIds]);\n\n  return (\n    <Fragment>\n      <NavbarStandard location={location} match={match} hasColor />\n      <Section>\n        <Card>\n          <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n            {loading ? (\n              <Loader />\n            ) : (\n              <Row noGutters={isList}>\n                {isIterableArray(localsByType) &&\n                  localsByType\n                    .filter(local => paginationData.includes(local.id))\n                    .map((local, index) => <Local {...local} key={local.id} index={index} />)}\n              </Row>\n            )}\n          </CardBody>\n          <ProductFooter meta={paginationMeta} handler={paginationHandler} />\n        </Card>\n      </Section>\n    </Fragment>\n  );\n};\n\nexport default Products;\n"],"sourceRoot":""}